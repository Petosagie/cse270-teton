# Workflow to build, test, analyze, and deploy static content to GitHub Pages
name: CI/CD Pipeline for CSE 270

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.2

      - name: Set up Python 3.12
        uses: actions/setup-python@v5.0.0
        with:
          python-version: "3.12"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest requests pytest-mock selenium requests-mock coverage
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          # Fail on critical errors
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Warnings only for complexity/style
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Start HTTP server
        uses: Eun/http-server-action@v1.0.11
        with:
          directory: .
          port: 5500
          index-files: |
            ["index.html", "index.htm"]

      - name: Install Firefox and Geckodriver
        run: |
          sudo apt-get update
          sudo apt-get install -y firefox libgtk-3-0 libdbus-glib-1-2
          wget https://github.com/mozilla/geckodriver/releases/download/v0.36.0/geckodriver-v0.36.0-linux64.tar.gz
          tar -xvzf geckodriver-v0.36.0-linux64.tar.gz
          chmod +x geckodriver
          sudo mv geckodriver /usr/local/bin/

      - name: Run tests
        run: pytest

  analyze:
    needs: build
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: ["javascript"]  # Extend this list as needed
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.2

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"

  deploy:
    needs: analyze
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.2

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v4.0.0

      - name: Upload static site artifact
        uses: actions/upload-pages-artifact@v3.0.1
        with:
          path: "teton/1.6"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4.0.5
